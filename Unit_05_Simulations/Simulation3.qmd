---
title: "Simulation Studies"
subtitle: "BYU STAT 250"
author: "Dr. Scott D. Grimshaw"
format: 
  revealjs:
    theme: slides.scss
    multiplex: true
    transition: fade
    slide-number: true
    chalkboard: true
    center: false
    html-math-method: mathjax
execute:
  freeze: auto
---

```{r}
#| include: false
knitr::opts_chunk$set(
  fig.width = 8,
  fig.asp = 0.818,
  fig.retina = 3,
  dpi = 300,
  out.width = "80%",
  fig.align = "center"
)
options(scipen = 100, width = 70)
library(tidyverse)
```

## Announcements


## Recap of last lecture

Simulating Data from a Probability Model


## Outline

Simulation Study Examples:

-   Normal Goodness of Fit Tests

-   Mini-Project: Simulation Study



## Assessing Normality

Experience looking at histograms / boxplots / density plots

Using GOF tests

-   Shapiro-Wilk Test

-   K-S test can be more generally applied


## {.smaller}

### Applying Normal Goodness of Fit Test 

::: columns
::: {.column width="50%"}
#### Define Ho: Normal

Normal($\mu, \sigma$)

$$
{\scriptsize
f(y) = \frac{1}{\sqrt{2\pi}\ \sigma}\ \cdot \ exp\left[{-\frac{1}{2\sigma^2} (y - \mu)^2}\right]
}
$$


```{r out.width = "40%"}
#| echo: false
#| eval: true
#| fig-align: left
plot(seq(-3, 3, length = 200), dnorm(seq(-3, 3, length = 200)), type = "l", xlab = "Y", ylab = "f(y)")
```

Features: continuous, symmetric, 68% within $\mu \pm \sigma$, 99.7% within $\mu \pm 3\sigma$

:::


::: {.column width="50%"}
#### Define Ha: Not Normal

At least one Feature that make the distribution non-normal

Test statistic looks for difference in features (skewed, discrete, multimodal, heavy/long tails, etc)

Note: Won't know what the non-normal distribution is!

Poisson($\lambda$ = 5)
```{r out.width = "40%"}
#| echo: false
#| eval: true
#| fig-align: left
plot(1 : 12, dpois(1 : 12, 5), pch = 19, xlab = "Y", ylab = "p(y)")
```


:::
:::


## Shapiro-Wilk test {.smaller}

#### Definition of P(Type 1 Error) 

Probability of Rejecting Ho when Ho is true

Probability of declaring data as non-normal given data is from a normal

#### Simulation to Approximate P(Type 1 Error) 

Pseudo Code
```{r}
#| echo: true
#| eval: false
Assign value for n

Create SW_Type1, an empty vector of length Nsim

for(i in 1 : Nsim){
  
  generate n observations from N(0, 1)
  
  compute Shapiro-Wilk Test

  save p-value in SW_Type1[i]
  
}

Compute the proportion of SW p-values < 0.05
```


## Shapiro-Wilk test 

#### Definition of Power

Probability of Rejecting Ho when Ha is true

Probability of declaring data as non-normal when it is from a non-normal distribution

Note: Need to choose a specific non-normal distribution and be clear on all details 

More precise to say "Probability of declaring data as non-normal when it is Poisson(5) with n = 15"


## Shapiro-Wilk test {.smaller}

#### Simulation to Approximate Power

Pseudo Code for Ha: Poisson(5)
```{r}
#| echo: true
#| eval: false
Assign value for n

Create SW_Power, an empty vector of length Nsim

for(i in 1 : Nsim){
  
  generate n observations from Poisson(5)
  
  compute Shapiro-Wilk Test

  save p-value in SW_Power[i]
  
}

Compute the proportion of SW p-values < 0.05
```

\  

Note: why is N(0,1) WLOG but Poisson(5) is not? because S-W test adjusts for location-scale (mean - variance), but it does not adjust for shape


## Power of Shapiro-Wilk test {.smaller}

::: panel-tabset
### Code for approx P(Type 1 Error)
```{r}
#| echo: false
#| eval: true
set.seed(2319)
```

```{r}
#| echo: true
#| eval: true
n <- 15

Nsim <- 10^5

pvals <- rep(0, Nsim)

for(i in 1 : Nsim){
  y <- rnorm(n)
  out <- shapiro.test(y)
  
  pvals[i] <- out$p.value
  
}

mean(pvals < 0.05)
```


### Code for approx Power

```{r}
#| echo: true
#| eval: true
n <- 15

Nsim <- 10^5

pvals <- rep(0, Nsim)

for(i in 1 : Nsim){
  y <- rpois(n, lambda = 5)
  out <- shapiro.test(y)
  
  pvals[i] <- out$p.value
  
}

mean(pvals < 0.05)
```

:::

## Power of Shapiro-Wilk test {.smaller}

You may think about other power calculations that are interesting

Sample Size: n = 10, 15, 30, 50, 100

Non-Normal Distributions: Poisson($\lambda$): $\lambda$ = 20, 10, 5
(as $\lambda$ increases the Poisson can be approximated by a normal)

```{r out.width = "40%"}
#| echo: false
#| eval: true
#| fig-align: left
plot(1 : 30, dpois(1 : 30, 5), pch = 19, xlab = "Y", ylab = "p(y)")
points(1 : 30, dpois(1 : 30, 10), pch = 19, col = "royalblue")
points(1 : 30, dpois(1 : 30, 20), pch = 19, col = "darkorange")
```


Don't those look like factors / levels from a designed experiment?


## Power of Shapiro-Wilk test {.smaller}

Your Turn

::: panel-tabset
### Approx P(Type 1 Error)
```{r}
#| echo: true
#| eval: true
SWtest_Type1Error <- function(n, Nsim = 10^5){
  pvals <- rep(0, Nsim)

  for(i in 1 : Nsim){
    y <- rnorm(n)
    out <- shapiro.test(y)
  
    pvals[i] <- out$p.value
  }
  mean(pvals < 0.05)
}

```

\ 

```{r}
#| echo: true
#| eval: true
SWtest_Type1Error(n = 10)
```

### Approx Power (Poisson)
```{r}
#| echo: true
#| eval: true
SWtest_Power <- function(n, lambda, Nsim = 10^5){
  pvals <- rep(0, Nsim)

  for(i in 1 : Nsim){
    y <- rpois(n, lambda)
    out <- shapiro.test(y)
  
    pvals[i] <- out$p.value
  }
  mean(pvals < 0.05)
}

```

\ 

```{r}
#| echo: true
#| eval: true
SWtest_Power(n = 10, lambda = 5)
```

### Sim Study Results

| Sample Size $n$ | P(Type I Error) | $\lambda=20$ | $\lambda=10$ | $\lambda=5$ |
|:---------------:|:---------------:|:----------:|:-----------:|:-------:|
| 10              |                 |            |             |             | 
| 15              |                 |            |             |             | 
| 30              |                 |            |             |             | 
| 50              |                 |            |             |             | 
| 100             |                 |            |             |             | 

:::

## Power of Shapiro-Wilk test 

Results:

-   Prompt: How well do Normal Goodness of Fit tests work?

-   Prompt: How dramatic does the non-normal distribution need to be for the test to detect normality?

-   Prompt: How large a sample is needed?



## Lecture Review

Simulation study Examples

-   Normal Goodness of Fit Tests

\ 

Appendix:

-   Extracting results (returned values) from R functions


## Appendix 

Extracting results (returned values) from R functions

```{r}
#| echo: true
#| eval: true
y <- rpois(15, lambda = 5)
  
out <- shapiro.test(y)

out

names(out)

out$p.value
```

## {.smaller}

Also
```{r}
#| echo: true
#| eval: true
shapiro.test
```