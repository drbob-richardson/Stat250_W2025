---
title: "Putting it All Together"
subtitle: "BYU STAT 250"
author: "Dr. Scott D. Grimshaw"
format: 
  revealjs:
    theme: slides.scss
    multiplex: true
    transition: fade
    slide-number: true
    chalkboard: true
    center: false
    html-math-method: mathjax
execute:
  freeze: auto
---

```{r}
#| include: false
knitr::opts_chunk$set(
  fig.width = 8,
  fig.asp = 0.818,
  fig.retina = 3,
  dpi = 300,
  out.width = "80%",
  fig.align = "center"
)
options(scipen = 100, width = 100)
```

## Announcements


## Recap of last lecture

Computing New Columns

-   tidyverse (`mutate`)

-   Base R (`$`)

## Outline

Use what we know in the Statistics / DS Project Cycle

![](images/projectcycle.png)

Analysis: Understanding Hotel Prices


## Hotel Pricing Demand

Goal is to predict the price a consumer would purchase a hotel room

-   If offered price is too high, the hotel will lose revenue because the room goes unused.

-   If the offered price is too low, the consumer will pay for the room because they got a good deal but the hotel will have lost potential revenue because they could have charged a higher price and still got the booking.

## Where do we start?

![](images/projectcycle.png)

# Your Turn! 

<https://grimshawville.byu.edu/BYUStat250/Wrangling4YourTurn.qmd>


## Import

From Tidy Tuesday website

```{r}
#| echo: true
library(tidyverse)

hotel <- read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-02-11/hotels.csv')
```

## What is next?

![](images/projectcycle.png)

## Tidy {.smaller}

```{r}
#| echo: false
set.seed(2319)
```

```{r}
#| echo: true
slice_sample(hotel, n = 10)
```

## Tidy {.smaller}

A different view of the provided dataset

```{r}
#| echo: true
glimpse(hotel)
```

## Where are we?

![](images/projectcycle.png)

Understand

-   pay less by staying longer?

-   weekend stay costs more at City Hotel?

## Transform {.smaller}

::: panel-tabset
### Tasks

Dataset is tall and wide. What are we focused on?

-   Room Cost

-   Focus on the City Hotel Property

-   Focus on the Bookings not cancelled

-   Do we have length of stay? How do we compute it?

-   Do we know which bookings include a weekend? How do we compute it?

### Dataset

```{r}
#| echo: true
glimpse(hotel)
```

### Code

```{r}
#| echo: true
cityhotel <- hotel |>
  filter(hotel == "City Hotel") |>
  filter(is_canceled == 0) |>
  mutate(stay = stays_in_weekend_nights + stays_in_week_nights,
         weekend = ifelse(stays_in_weekend_nights > 1, "Weekend", "NotWeekend")) |>
  select(adr, weekend, stay)
```

### Dataset for Analysis

```{r}
#| echo: true
slice_sample(cityhotel, n = 15)
```

:::


## Visualize

Pay Less by Staying Longer?

```{r}
#| code-fold: true
#| echo: true
ggplot(cityhotel, aes(x = stay, y = adr)) +
  geom_point() +
  geom_smooth() +
  labs(title = "City Hotel")
```

## Visualize

Pay Less by Staying Longer?

```{r}
#| code-fold: true
#| echo: true
cityhotel |>
  filter(stay < 20) |>
  filter(adr > 10) |>
  ggplot(aes(x = stay, y = adr)) +
    geom_jitter(size = 3, color = "tan", alpha = 0.2) +
    geom_smooth(se = FALSE) +
    scale_y_log10() +  
      labs(title = "City Hotel",
           y = "Ave Daily Rate ($)",
           x = "Length of Stay (days)")
```

## Visualize

Weekend Stay Costs More?

```{r}
#| code-fold: true
#| echo: true
ggplot(cityhotel, aes(x = adr, fill = weekend)) +
  geom_density(alpha = 0.5) +
  labs(title = "City Hotel")
```

## Visualize

Weekend Stay Costs More?

```{r}
#| code-fold: true
#| echo: true
ggplot(cityhotel, aes(x = weekend, y = adr)) +
  geom_boxplot() +
  labs(title = "City Hotel",
       y = "Ave Daily Rate ($)",
       x = NULL)
```

## Where are we?

![](images/projectcycle.png)

Learned A Lot. Need To Understand More!

Price is more complicated. What are other possible effects?

## Transform

Add some lines to the previous creation of `cityhotel`

-   Log transformation can't have `adr` zero

-   additional columns

## Transform {.smaller}

::: panel-tabset
### Code

```{r}
#| echo: true
#| code-line-numbers: "4,7,8"
cityhotel <- hotel |>
  filter(hotel == "City Hotel") |>
  filter(is_canceled == 0) |>
  filter(adr > 10) |>
  mutate(stay = stays_in_weekend_nights + stays_in_week_nights,
         weekend = ifelse(stays_in_weekend_nights > 1, "Weekend", "NotWeekend")) |>
  select(adr, weekend, stay, lead_time, is_repeated_guest, 
         required_car_parking_spaces, total_of_special_requests)
```

### Dataset

```{r}
#| echo: true
slice_sample(cityhotel, n = 15)
```
:::

## Transform {.smaller}

Create train and test datasets for modeling (70-30%)

45,073 rows in `cityhotel` (70% is 31,551.1)

::: panel-tabset 

### Code

```{r}
#| echo: true
train_samplesize <- 32000
set.seed(2319)
train_rows <- sample(45073, train_samplesize)
head(train_rows)
train <- cityhotel[train_rows, ]
test <- cityhotel[-train_rows, ]
```

### `train`

```{r}
#| echo: true
slice_sample(train, n = 15)
```
:::

## Visualize

```{r}
#| echo: true
library(GGally)
ggpairs(train)
```

## Model {.smaller}

```{r}
#| echo: true
out1 <- lm(log(adr) ~ ., data = train)
summary(out1)
```

## Model

Prediction Performance

```{r}
#| echo: true
mean( (train$adr - exp( predict(out1) ) )^2 )
mean( (test$adr - exp( predict(out1, newdata = test) ) )^2 )
```

## Are we done?

![](images/projectcycle.png)

## Communicate

Table 1

```{r}
#| code-fold: true
#| echo: true
library(table1)
# Pretty variable names
label(train$adr) <- "Ave Daily Rate"
units(train$adr) <- "$"
label(train$stay) <- "Length of Stay"
units(train$stay) <- "days"
label(train$lead_time) <- "Days between Booking and Arrival"
label(train$weekend) <- "Type of Booking"
# coded as 0 / 1 but not numeric
train$is_repeated_guest <- ifelse(train$is_repeated_guest == 1, "Yes", "No")
label(train$is_repeated_guest) <- "Repeat Guest?"
label(train$required_car_parking_spaces) <- "Parking Spaces Required"

table1(~ adr + stay + lead_time + weekend 
         + is_repeated_guest + required_car_parking_spaces, 
       data = train)
```


## Communicate

Signs on regression coefficients make sense

Prediction in the future can be trusted (no evidence of overfit)

Naive prediction uncertainty

$$
\hat{Y}\ \pm\ 2 \sqrt{1320} = \hat{Y}\ \pm\  2 \cdot 36.3 = \hat{Y}\ \pm\ 73
$$

***Note:*** use `predict` and untransform for precise prediction interval


## Lecture Review {.smaller}

Applying the Statistics / DS Project Cycle

![](images/projectcycle.png)
What skills did we use and where?

