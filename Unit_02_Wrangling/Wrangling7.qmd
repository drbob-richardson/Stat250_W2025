---
title: "Working With Multiple Datasets"
subtitle: "BYU STAT 250"
author: "Dr. Scott D. Grimshaw"
format: 
  revealjs:
    theme: slides.scss
    multiplex: true
    transition: fade
    slide-number: true
    chalkboard: true
    center: false
    html-math-method: mathjax
execute:
  freeze: auto
---

```{r}
#| include: false
knitr::opts_chunk$set(
  fig.width = 8,
  fig.asp = 0.818,
  fig.retina = 3,
  dpi = 300,
  out.width = "80%",
  fig.align = "center"
)
options(scipen = 100, width = 100)
library(tidyverse)
```

## Announcements


## Recap of last lecture

Character / String Data

Tallies

Queries



## Outline

Information in Multiple Datasets (Relational Databases)

Keys

Joins

## Goal

We ...

[have]{style="color:teal;"} multiple datasets

[want]{style="color:teal;"} to bring them together


## Women in Science {.smaller}

Information on 10 women in science who changed the world 

| Scientists          |
|---------------------|
| Ada Lovelace        |
| Marie Curie         |
| Janaki Ammal        |
| Chien-Shiung Wu     |
| Katherine Johnson   |
| Rosalind Franklin   |
| Vera Rubin          |
| Gladys West         |
| Flossie Wong-Staal  |
| Jennifer Doudna     |

(Discover Magazine, 2020)

## Women in Science {.smaller}

::: panel-tabset
### professions
```{r}
#| echo: true
#| code-fold: true
professions <- read_csv("
name,profession
Ada Lovelace,Mathematician
Marie Curie,Physicist and Chemist
Janaki Ammal,Botanist
Chien-Shiung Wu,Physicist
Katherine Johnson,Mathematician
Rosalind Franklin,Chemist
Vera Rubin,Astronomer
Gladys West,Mathematician
Flossie Wong-Staal,Virologist and Molecular Biologist
Jennifer Doudna,Biochemist
")
professions
```
### dates
```{r}
#| echo: true
#| code-fold: true
dates <- read_csv("
name,birth_year,death_year
Janaki Ammal,1897,1984
Chien-Shiung Wu,1912,1997
Katherine Johnson,1918,2020
Rosalind Franklin,1920,1958
Vera Rubin,1928,2016
Gladys West,1930,
Flossie Wong-Staal,1947,
Jennifer Doudna,1964,
")
dates
```
### works
```{r}
#| echo: true
#| code-fold: true
works <- read_csv('
name,known_for
Ada Lovelace,first computer algorithm
Marie Curie,"theory of radioactivity,  discovery of elements polonium and radium, first woman to win a Nobel Prize"
Janaki Ammal,"hybrid species, biodiversity protection"
Chien-Shiung Wu,"confim and refine theory of radioactive beta decy, Wu experiment overturning theory of parity"
Katherine Johnson,calculations of orbital mechanics critical to sending the first Americans into space
Vera Rubin,existence of dark matter
Gladys West,mathematical modeling of the shape of the Earth which served as the foundation of GPS technology
Flossie Wong-Staal,first scientist to clone HIV and create a map of its genes which led to a test for the virus
Jennifer Doudna,"one of the primary developers of CRISPR, a ground-breaking technology for editing genomes"
')
works
```

:::

## Desired (Tidy) Dataset {.smaller}

```{r}
#| echo: false
professions |>
  left_join(dates) |>
  left_join(works)
```

## Joining Datasets {.smaller}

```{r}
#| echo: true
#| eval: false
something_join(x, y)
```

- `left_join()`: all rows from x
- `right_join()`: all rows from y
- `full_join()`: all rows from both x and y
- `semi_join()`: all rows from x where there are matching values in y, keeping just columns from x
- `inner_join()`: all rows from x where there are matching values in y, return 
all combination of multiple matches in the case of multiple matches
- `anti_join()`: return all rows from x where there are not matching values in y, never duplicate rows of x
- ...

## Setup for Cartoons that follow

::: columns
::: {.column width="50%"}
```{r}
#| echo: true
#| code-fold: true
x <- read_table("
id value_x
1 x1
2 x2
3 x3
")
```

```{r}
#| echo: true
x
```
:::

::: {.column width="50%"}
```{r}
#| echo: true
#| code-fold: true
y <- read_table("
id value_y
1 y1
2 y2
4 y4
")
```

```{r}
#| echo: true
y
```
:::

:::

\ 

`id` is a key that can be used to connect / link the info in the datasets


## `left_join()`

::: columns
::: {.column width="50%"}
![](images/left-join.gif){layout-valign="top"}
:::

::: {.column width="50%"}

\ 

```{r}
#| echo: true
left_join(x, y)
```
:::

:::

## `left_join()` {.smaller}

```{r}
#| echo: true
#| code-line-numbers: "2"
professions |>
  left_join(dates)
```

::: panel-tabset
### professions
```{r}
#| echo: false
professions
```
### dates
```{r}
#| echo: false
dates
```
:::

## `right_join()`

::: columns
::: {.column width="50%"}
![](images/right-join.gif){layout-valign="top"}
:::

::: {.column width="50%"}

\ 

```{r}
#| echo: true
right_join(x, y)
```
:::

:::

## `right_join()` {.smaller}

```{r}
#| echo: true
#| code-line-numbers: "2"
professions |>
  right_join(dates)
```

::: panel-tabset
### professions
```{r}
#| echo: false
professions
```
### dates
```{r}
#| echo: false
dates
```
:::

## `full_join()`

::: columns
::: {.column width="50%"}
![](images/full-join.gif){layout-valign="top"}
:::

::: {.column width="50%"}

\ 

```{r}
#| echo: true
full_join(x, y)
```
:::

:::

## `full_join()` {.smaller}

```{r}
#| echo: true
#| code-line-numbers: "2"
dates |>
  full_join(works)
```

::: panel-tabset
### dates
```{r}
#| echo: false
dates
```
### works
```{r}
#| echo: false
works
```
:::

## `inner_join()`

::: columns
::: {.column width="50%"}
![](images/inner-join.gif){layout-valign="top"}
:::

::: {.column width="50%"}

\ 

```{r}
#| echo: true
inner_join(x, y)
```
:::

:::

## `inner_join()` {.smaller}

```{r}
#| echo: true
#| code-line-numbers: "2"
dates |>
  inner_join(works)
```

::: panel-tabset
### dates
```{r}
#| echo: false
dates
```
### works
```{r}
#| echo: false
works
```
:::

## Filtering Joins

\ 

### Filter rows based on matching or not,

\ 

### But don't bring the columns


## `semi_join()`

::: columns
::: {.column width="50%"}
![](images/semi-join.gif){layout-valign="top"}
:::

::: {.column width="50%"}

\ 

```{r}
#| echo: true
semi_join(x, y)
```
:::

:::

## `semi_join()` {.smaller}

```{r}
#| echo: true
#| code-line-numbers: "2"
dates |>
  semi_join(works)
```

::: panel-tabset
### dates
```{r}
#| echo: false
dates
```
### works
```{r}
#| echo: false
works
```
:::


## `anti_join()`

::: columns
::: {.column width="50%"}
![](images/anti-join.gif){layout-valign="top"}
:::

::: {.column width="50%"}

\ 

```{r}
#| echo: true
anti_join(x, y)
```
:::

:::

## `anti_join()` {.smaller}

```{r}
#| echo: true
#| code-line-numbers: "2"
dates |>
  anti_join(works)
```

::: panel-tabset
### dates
```{r}
#| echo: false
dates
```
### works
```{r}
#| echo: false
works
```
:::

## Tidy Women Scientists {.smaller}

Want all 10 scientists, OK with missing data


```{r}
#| echo: true
professions |>
  left_join(dates) |>
  left_join(works)
```

::: panel-tabset
### professions
```{r}
#| echo: false
professions
```
### dates
```{r}
#| echo: false
dates
```
### works
```{r}
#| echo: false
works
```
:::


## Lecture Review {.smaller}

Information in Multiple Datasets (Relational Databases)

Keys

Joins

