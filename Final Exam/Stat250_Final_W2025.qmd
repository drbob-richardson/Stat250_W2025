---
title: "Stat 250 Final Exam"
format: html
editor: visual
---

## Exam Rules

-   No ChatGPT or internet searches while in the exam
-   No built-in AI from R or RStudio
-   R help files, your personal folders, and the tidyverse cheatsheets are perfectly okay, and even recommended to use
-   Some useful cheat sheet links:
    -   stringr for characters and strings: [stringr cheat sheet](https://rstudio.github.io/cheatsheets/html/strings.html?_gl=1*1egbnc1*_ga*MTI5MTE3MjM0MS4xNzQzNDQ3MTAy*_ga_2C0WZ1JHG0*MTc0NTI1Njc5NS41LjAuMTc0NTI1Njc5NS4wLjAuMA..)
    -   forcats for factor variables: [forcats cheat sheet](https://rstudio.github.io/cheatsheets/html/factors.html?_gl=1*73ogpb*_ga*MTI5MTE3MjM0MS4xNzQzNDQ3MTAy*_ga_2C0WZ1JHG0*MTc0NTI1Njc5NS41LjAuMTc0NTI1Njc5NS4wLjAuMA..)
    -   lubridate for date and time variables: [lubridate cheat sheet](https://rstudio.github.io/cheatsheets/html/lubridate.html?_gl=1*yuxrh1*_ga*MTI5MTE3MjM0MS4xNzQzNDQ3MTAy*_ga_2C0WZ1JHG0*MTc0NTI1Njc5NS41LjAuMTc0NTI1Njc5NS4wLjAuMA..)

## Set-up For Part 1

In this exam you will work with the IMDB Top 1000 dataset, which contains information on movies and TV shows including titles, ratings, genres, runtimes, descriptions, and more. The dataset is available at:

`https://drbob-richardson.github.io/Stat250_W2025/data/imdb_top_1000.csv`

Your tasks include data loading, cleaning, transformation, summarization, and visualization. Answer each question in a separate code chunk.

------------------------------------------------------------------------

### Question 1

Load the IMDB Top 1000 dataset directly from the provided URL and display the first 10 rows of the dataset.

```{r}
# Write your code here
```

------------------------------------------------------------------------

### Question 2

The `runtime` column contains strings such as "90 min" or "120 min". Create a new numeric column called `runtime_minutes` by extracting the numeric portion from the `runtime` column.

```{r}
# Write your code here
```

------------------------------------------------------------------------

### Question 3

Count the number of movies that contain the `Sci-Fi` genre as found in the `genre` column

```{r}
# Write your code here
```

------------------------------------------------------------------------

### Question 4

Find and display the top grossing movie in each year.

```{r}
# Write your code here
```

------------------------------------------------------------------------

### Question 5

In the overview column, replace all instances of the word "adventure" with the word "jaunt".

```{r}
# Write your code here
```

------------------------------------------------------------------------

### Question 6

Create a plot of the distribution of the number of words in each overview. Use good labels and a useful title.

```{r}
# Write your code here
```

------------------------------------------------------------------------

### Question 7

Create a new column called `era` that splits the data into three groups \* Prior to 1980 \* From 1981 to 2005 \* 2006 or later Call the groups, `old`, `mid`, and `new`. Save this data set for the next question

```{r}
# Write your code here
```

------------------------------------------------------------------------

### Question 8

Create a scatterplot of IMDB rating against the Metascore with the color of the point being the era of the release, the variable created in the previous problem. Use good labels and a useful title.

```{r}
# Write your code here
```

------------------------------------------------------------------------

## Setup for Part 2

In this part of the exam, you will work with two datasets: - **movie_finance** – Contains financial and production information for 30 movies. - **movie_reviews** – Contains review information for these movies.

Below are the code chunks to create these datasets. Run these chunks to generate the data for the following questions.

```{r}
library(tidyverse)
library(lubridate)
set.seed(123)

n <- 100
movie_finance <- tibble(
  movie_id = 1:n,
  title = paste("Movie", 1:n),
  release_date = sample(seq.Date(as.Date("2023-01-01"), as.Date("2023-12-31"), by="day"), n),
  box_office = round(runif(n, min = 50, max = 500), 2),  # in millions
  production_country = sample(c("USA", "UK", "Canada", "France", "Germany"), n, replace = TRUE),
  budget = round(runif(n, min = 10, max = 200), 2)  # in millions
)

movie_finance
```

```{r}
movie_reviews <- tibble(
  movie_id = 1:n,
  critic_rating = round(runif(n, min = 1, max = 10), 1),
  audience_rating = round(runif(n, min = 1, max = 10), 1),
  review_count = sample(50:1000, n, replace = TRUE)
)

movie_reviews
```

Now that the datasets have been created, proceed with the following questions.

------------------------------------------------------------------------

### Question 9

Join the `movie_finance` and `movie_reviews` datasets on `movie_id` to create a combined dataset. Display the first 10 rows of the resulting dataset.

```{r}
# Write your code here
```

------------------------------------------------------------------------

### Question 10

In the combined dataset, create a new column called `production_region` that recodes `production_country` into: - "Domestic" if the country is "USA" - "International" otherwise.

```{r}
# Write your code here
```

------------------------------------------------------------------------

### Question 11

From the `release_date` column in the combined dataset, extract the month and add it as a new column called `release_month`.

```{r}
# Write your code here
```

------------------------------------------------------------------------

### Question 12

Using the table1 package, generate a summary table for the numeric variables in the combined dataset stratified by `production_region`.

```{r}
# Write your code here 
```

------------------------------------------------------------------------

### Question 13

Construct a line plot that shows the average `box_office` (y-axis) by `release_month` (x-axis). Color the lines or points based on `production_region`. Use appropriate labels and a useful title.

```{r}
# Write your code here to create the line plot.
```

------------------------------------------------------------------------

### Question 14

Create a bar chart showing the count of movies for each `production_region`, ordered from most frequent to least frequent.

```{r}
# Write your code here
```

------------------------------------------------------------------------

### Question 15

Create a new variable called `Earnings` that is the difference between the box office and the budget and filter the data set to include only movies with negative earnings. Select only the movie ID and critic rating and display them below.

```{r}
# Write your code here
```

------------------------------------------------------------------------

### Question 16

Find the longest time in number of days between movie releases for the movies in this data set.

```{r}
# Write your code here
```
